{"version":3,"file":"static/js/406.d464dfd3.chunk.js","mappings":"uSAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iQAcTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6RAYTI,EAAYJ,EAAAA,GAAAA,MAAH,kGAMTK,EAAUL,EAAAA,GAAAA,OAAH,6ZAiBPM,EAAYN,EAAAA,GAAAA,IAAH,4HAQTO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,gJ,SCnDjBS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,sBAC1BC,SAAUH,EAAAA,KAAaI,IAAI,GAAGC,SAAS,0BAG5BC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WAER,OADAL,GAASM,EAAAA,EAAAA,IAAiBJ,IACnB,WACLF,GAASM,EAAAA,EAAAA,IAAiB,MAC3B,CACF,IASC,OACA,iCACE,SAAC,KAAD,CACEC,cAAe,CAAEZ,MAAO,GAAIC,SAAU,IACtCY,SAXe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BV,GAASW,EAAAA,EAAAA,IAAMF,IACD,OAAVP,GACFQ,GAEH,EAOKE,iBAAkBpB,EAHpB,UAKE,UAACV,EAAD,YACE,UAACK,EAAD,YACE,SAACF,EAAD,CAAW4B,KAAK,QAAQC,KAAK,QAAQC,YAAY,qBADnD,YAGA,SAACzB,EAAD,CAAYwB,KAAK,QAAQE,UAAU,SAEnC,UAAC7B,EAAD,YACE,SAACF,EAAD,CAAW4B,KAAK,WAAWC,KAAK,WAAWC,YAAY,wBADzD,eAGA,SAACzB,EAAD,CAAYwB,KAAK,WAAWE,UAAU,SAEtC,SAAC5B,EAAD,CAASyB,KAAK,SAAd,yBAGHX,IACC,SAACb,EAAD,wFAMP,ECzDc,SAAS4B,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACnB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormLogin = styled(Form)`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 15px;\n    width:380px;\n    margin-top: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n\n    border: 1px black solid;\n`;\n\nexport const FormInput = styled(Field)`\n  margin-top: 10px;\n  border: 1px darkblue solid;\n    &:focus {\n        border: 2px darkblue solid;\n        border-radius: 5px;\n        outline: none;\n        box-shadow: 3px 3px 2px 2px rgba(0, 0, 0, 0.3);\n        background-color: transparent;\n    }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column-reverse;\n  font-weight: 500;\n`;\n\nexport const FormBtn = styled.button`\n  padding: 5px 15px;\n    width: 150px;\n    cursor: pointer;\n    \n    border: none;\n    border-radius: 5px;\n    font-weight: 500;\n    color: darkblue;\n    background-color: skyblue;\n    &:hover, &:focus {\n        background-color: lightblue;\n        box-shadow: 3px 3px 2px 2px rgba(0, 0, 0, 0.3);\n    }\n    transition: background-color 300ms linear, box-shadow 300ms linear;\n`;\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  color: red;\n  margin-top: 15px;\n  font-weight: 700;\n  font-size: 16px;\n`;\n\nexport const InputError = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  margin-bottom: 15px;\n  font-weight: 500;\n  font-size: 12px;\n`;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { logIn } from 'redux/Auth/operations';\nimport { getLogInError } from 'redux/Auth/selectors';\nimport { updateErrorLogIn } from 'redux/Auth/authSlice';\nimport { FormLogin, FormInput, FormLabel, FormBtn, ErrorText, InputError } from 'components/LoginForm/LoginForm.styled';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Not a proper email'),\n  password: yup.string().min(6).required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getLogInError);\n\n  useEffect(() => {\n    dispatch(updateErrorLogIn(error));\n    return () => {\n      dispatch(updateErrorLogIn(null));\n    };\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    if (error !== null) {\n      resetForm();\n    }\n  };\n\n    return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormLogin>\n          <FormLabel>\n            <FormInput type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n          Email</FormLabel>\n          <InputError name=\"email\" component=\"div\" />\n\n          <FormLabel>\n            <FormInput type=\"password\" name=\"password\" placeholder=\"Enter your password\" />\n          Password</FormLabel>\n          <InputError name=\"password\" component=\"div\" />\n\n          <FormBtn type=\"submit\">Log In</FormBtn>\n        </FormLogin>\n      </Formik>\n      {error && (\n        <ErrorText>\n          An error occurred! Check your login and password or go to the register.\n        </ErrorText>\n      )}\n    </>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}"],"names":["FormLogin","styled","Form","FormInput","Field","FormLabel","FormBtn","ErrorText","InputError","ErrorMessage","schema","yup","shape","email","password","min","required","LoginForm","dispatch","useDispatch","error","useSelector","getLogInError","useEffect","updateErrorLogIn","initialValues","onSubmit","values","resetForm","logIn","validationSchema","type","name","placeholder","component","Login","Helmet"],"sourceRoot":""}